let config = require('./examples/config');
let microsoftController = require('./index')
let o365 = new microsoftController(config.microsoft);
let moment = require('moment');
let fs = require('fs');
let RequestHelper = require('./helpers/requestHelper');
let request_helper = new RequestHelper();
//console.log(require('./token.json'));
var assert = require('assert');
let token = "EwBIA8l6BAAU7p9QDpi/D7xJLwsTgCg3TskyTaQAAfZ83YpnqZJ1yemDNRfGjJWVKjQVZIhVCRrRFN3m6cv8RejaGA8Nm2hfsBfTScbQ2fcI7qv9PgmMr/fTAOr2MXPsiVQ26BmP/BN73wrSilyHtzVEL+gnySQKtjZxfXyCRftXeAwYQ3ZEKMSzRv9j1NSr0EIZ2VKKQLoUTXncNhlNOwm9E3kqAI453wHgf1VRzM7I5yHtm0+cgV1SU53/9zq0FiCkVaoicJRrVmjxc0lfu+PxQOzJM6fFLuEUHG8SmVHMuU+n2+ebuA5ZyU7lIfVPmkp4juKj6I+PBFayRg4PAy0om8BZsLQFMZs6Di6o8tjUnvpSlUx1MYJu9rRmKy0DZgAACHKdZjZnp9xhGAKSdIi7F5nirBfnIr0wQZwIeZn2/1958KXdzDnO49ltoQXeL2AiuQQlZ0p0nz+JZuK5o+7C9zluqkzg8E8/kBiSJ542+MzTiW2C6aDNa0+VN+M1q9vTh302lgMJnlawZszzI4vE4obi9TTRXq6CgRp53q8p0pJ/o5poW7xDHgceKBszKrjzPbzBM5fikjBAgvUOGXD71DKnBgcxgWVrion1LBQZN/X8atnYhEDFsYav2nfMnSqP52aOKs8L6n9qpgLw0+0RFF9ozQl9VUgQWvKzvYrhr0cU65gYbDQ2hMRv/nEX19mUPGYqtqFvn67MXhjojNWdlh35/0s8XslEBsxqT158Z+6q5keYHzysQm7mq4TJ2/MS2Zc2PqUqt/JHFCADyEPdBa6U/ErPiyDJs/wUKYd0SQHRwJzwWzTc7jsWb9CmSBtu7RVO8M5S/mgGjnTDiVtKW2IduOmmIkV4KkYMb6gqAKy9OKrfzXAes+7GKbgcwjNl91v/Pca2qniH3u2Koy+bntmyAaY0k0ZUm5zBjqbBnEHIzyvJTOOQ14S259QhyrsWVMurRecvqsbBuLICGJmmxB3wl2t1jFqdthOXX3PnNwNHb7KyZoPWcrRKDlTJeTy9JM4pibRWW2dgXqJ4AWjhurn0pXiCLTtktKLCszil4VxB4LdvaULmkVoNaLDo2iJ+rfAhAHvN+WDZgHuW2gx9uTNiXVkC";

/** fetch mail **/
// o365.events(token, mail_data, (err, data)=>{
//   if(err){
//     console.log('Error Occured ::',err);
//   }else {
//     console.log('data==============>', JSON.stringify(data));
//   }
// });


/* signin api
o365.singin('http://localhost/auth_test', (err,data)=>{
if(err){
console.log('8************', err)
}else{
console.log('data=============>', data)
}

})
*/

/** Subscription testcase**/
function callback(err, data) {
  if (err) {
    console.log('8************', err)
  } else {
    console.log( 'DATA ==> success')
    console.log( 'DATA ==> ',JSON.stringify(data))
  }
}

describe('fetch mail', function() {
  describe('#mail()', function() {
    it('it should fetch mails from o365 :', function() {
      let mail_data = {
        "fields": ["subject", "importance"],
        "search":{
          "orClause":[{
            "key":"from",
            "value":"jay"
          },
          {
            "key":"subject",
            "value":"can"
          }]
        }
      }
      o365.mail(token ,mail_data, callback)
    });
    it('it should fetch contact details', (done)=> {
      let mail_data = {
        "limit":1,
        "fields": ["displayName", "givenName"],
        "filters":{
          "field":{
            "key":"displayName",
            "criteria":"eq",
            "value":"Pavel Bansky"
          }
        }
      };
      o365.contact(token ,mail_data, (err, data)=>{
        if(!err){
          data.forEach((info)=>{
            assert(info.hasOwnProperty('displayName'));
            assert(info.hasOwnProperty('givenName'));
          })
          done();
        }else{
          console.log('Err ',err);
        }
      })
    });
    it('it should fetch the frequent send mails', (done)=> {
      let mail_data = {};
      o365.frequentContacts(token ,mail_data, (err, data)=>{
          if(!err){
            data.forEach((info)=>{
              assert(info.hasOwnProperty('name'));
              assert(info.hasOwnProperty('address'));
              assert(info.hasOwnProperty('count'));
            })
            done();
          }else{
            console.log('Err ',err);
          }
      })
    });
    it('it should fetch the frequent received mails from', (done)=> {
      let mail_data = {};
      o365.frequentReceivedMailContacts(token ,mail_data, (err, data)=>{
          if(!err){
            data.forEach((info)=>{
              if(info){
                assert(info.hasOwnProperty('name'));
                assert(info.hasOwnProperty('address'));
                assert(info.hasOwnProperty('count'));
              }
              done()
            })
          }else{
            console.log('Err ',err);
          }
      })
    });
    it.only('it should fetch the profile image',(done)=>{
       let _data = {
         version:'beta'
       };
       o365.profileImage(token,_data, (err,data)=>{
           if(data){
             let path = __dirname+'/image.jpeg';
             fs.writeFile(path, data, function (err) {
                    if(!err){
                      console.log('File got uploaded in ',path);
                      assert(true);
                      done();
                    }else{
                      console.log('Error ',err);
                    }
                })
          }else{
            console.log('Error ',err);
          }
       })
    })
    it('it should fetch the profile details',(done)=>{
       let _data = {};
       o365.profile(token,_data, (err,data)=>{
           if(data){
            data = JSON.parse(data.toString('utf8'));
            assert(typeof data == 'object' && Object.keys(data).length > 0);
            done();
          }else{
            console.log('Error ',err);
          }
       })
    })
  });
  describe('#delete subscription',()=>{
     it('it should delete subscription by ID',(done)=>{
       let subscription_data = {
          "userId":"97015daa3d19caba",
          "eventType": "Created",
          "eventCategory": "Messages",
          "mailID": "Mc2d767f7-cc30-2663-0f1e-50cc90f9ad02",
          "notificationURL": "https://prioriti.net/mailms/o365/listen",
          version : 'beta'
        };
        o365.createSubscription(token, subscription_data, (err, data)=>{
          if(data && data.id){
            let url = '/subscriptions/'+data.id;
            o365.deleteSubscription(token, data.id, subscription_data, (err, data)=>{
               if(!err){
                 assert(data == 'Task executed successfully');
                 done()
               }else{
                 console.log('Error ',err);
               }
            })
          }else{
             console.log('Error ',err);
           }
         })
       })
     })
});

xdescribe('fetch events', function() {
  describe('#events()', function() {
    it('it should fetch events from o365 calendar :', function() {
      let event_data = {
        "id":"",
        "calendarFields": ["subject", "importance", "start", "end"],
        "orderByClause": [{
          "key": "endDateTime",
          "criteria": "desc"
        }],
        "filters": {
          "orClause":[
            {
              "key": "startDateTime",
              "value": "2017-11-08T00:00:00Z",
              "criteria": "ge"
            },
            {
              "key": "endDateTime",
              "value": "2017-11-12T00:00:00Z",
              "criteria": "le"
            }
          ]
        }
      }
      // o365.events(token ,event_data, callback);
    });
  });
});
