let fields_mapping = require('../config/fieldsMapping.json');

class QueryHelper {

  constructor() {}

  queryBuilder(data) {

    let query_string = '';
    let query_clause_added = false;
    let skip_stringify_of_values = ["true", "false"];

    if (data.id) {
      query_string += data.id;
    }

    if (!!data.offset) {
      query_string += (!query_clause_added ? "?" : "&");
      query_clause_added = true;
      query_string += "$skip=" + data.offset;
    }

    if (!!data.limit) {
      query_string += (!query_clause_added ? "?" : "&");
      query_clause_added = true;
      query_string += "$top=" + data.limit;
    }

    let fields = (((data.fields && data.fields.length) || (data.attachmentFields && data.attachmentFields.length) || (data.calendarFields && data.calendarFields.length)) ? (data.fields || data.attachmentFields || data.calendarFields) : null);

    if (!!fields) {
      query_string += (!query_clause_added ? "?" : "&");
      query_clause_added = true;
      let new_data_fields = [];
      fields.forEach((df) => {
        let field_key = (!!fields_mapping[`${df}`]) ? fields_mapping[`${df}`] : df;
        new_data_fields.push(field_key)
      })
      query_string += "$select=" + new_data_fields.join(",");
    }

    if (data.filters && data.filters.field && data.filters.field.criteria) {
      query_string += (!query_clause_added ? "?" : "&");
      query_clause_added = true;
      let field_key = (!!fields_mapping[`${data.filters.field.key}`]) ? fields_mapping[`${data.filters.field.key}`] : `${data.filters.field.key}`;
      if (skip_stringify_of_values.indexOf(data.filters.field.value) >= 0) {
        query_string += `$filter=${field_key} ${data.filters.field.criteria} ${data.filters.field.value}`;
      } else {
        query_string += `$filter=${field_key} ${data.filters.field.criteria} '${data.filters.field.value}'`;
      }
    } else if (data.filters && data.filters.orClause && data.filters.orClause.length > 0) {
      /**
        orClause query handling
      **/
      let orclause_query_arr = [];
      query_string += (!query_clause_added ? "?" : "&");
      query_clause_added = true;

      data.filters.orClause.forEach(function(criteria_obj) {
        let field_key = (!!fields_mapping[`${criteria_obj.key}`]) ? fields_mapping[`${criteria_obj.key}`] : `${criteria_obj.key}`;
        let str = '';
        if (skip_stringify_of_values.indexOf(criteria_obj.value) >= 0) {
          str = `${field_key} ${criteria_obj.criteria} ${criteria_obj.value}`
        } else {
          str = `${field_key} ${criteria_obj.criteria} '${criteria_obj.value}'`
        }
        orclause_query_arr.push(str);
      })

      if (!!orclause_query_arr) {
        query_string += `$filter=${orclause_query_arr.join(' or ')}`;
      }

    } else if (data.filters && data.filters.andClause && data.filters.andClause.length > 0) {
      /**
      andClause query handling
      **/
      let andclause_query_arr = [];
      query_string += (!query_clause_added ? "?" : "&");
      query_clause_added = true;

      data.filters.andClause.forEach(function(criteria_obj) {
        let field_key = (!!fields_mapping[`${criteria_obj.key}`]) ? fields_mapping[`${criteria_obj.key}`] : `${criteria_obj.key}`;
        let str = '';
        if (skip_stringify_of_values.indexOf(criteria_obj.value) >= 0) {
          str = `${field_key} ${criteria_obj.criteria} ${criteria_obj.value}`
        } else {
          str = `${field_key} ${criteria_obj.criteria} '${criteria_obj.value}'`
        }
        andclause_query_arr.push(str);
      })

      if (!!andclause_query_arr) {
        query_string += `$filter=${andclause_query_arr.join(' and ')}`;
      }
    }

    if (!!data.orderByClause && data.orderByClause.length > 0) {
      let orderby_fields_array = [];
      data.orderByClause.forEach(function(orderByElm) {
        let field_key = (!!fields_mapping[`${orderByElm.key}`]) ? fields_mapping[`${orderByElm.key}`] : `${orderByElm.key}`;
        orderby_fields_array.push(`${field_key} ${orderByElm.criteria}`)
      });
      if (orderby_fields_array.length > 0) {
        query_string += (!query_clause_added ? "?" : "&");
        query_clause_added = true;
        query_string += `$orderby=` + orderby_fields_array.join(",");
      }
    }

    /*if(data.attachmentFields){

    }*/
    if (!!data.search) {
      query_string += (!query_clause_added ? "?" : "&");
      query_clause_added = true;
      if (!!data.search.query) {
        query_string += `$search="${data.search.query}"`;
      } else if (!!data.search.field) {
        let field_key = (!!fields_mapping[`${data.search.field.key}`]) ? fields_mapping[`${data.search.field.key}`] : `${data.search.field.key}`;
        query_string += `$search="${field_key}:${data.search.field.value}"`;
      } else if (!!data.search.orClause && data.search.orClause.length > 0) {
        let searchFields = [];
        data.search.orClause.forEach(function(search_fields) {
          let field_key = (!!fields_mapping[`${search_fields.key}`]) ? fields_mapping[`${search_fields.key}`] : `${search_fields.key}`;
          let search_query = `${field_key}:${search_fields.value}`
          searchFields.push(search_query)
        })
        query_string += `$search="${searchFields.join(' OR ')}"`;
      } else if (!!data.search.andClause && data.search.andClause.length > 0) {
        let searchFields = [];
        data.search.andClause.forEach(function(search_fields) {
          let field_key = (!!fields_mapping[`${search_fields.key}`]) ? fields_mapping[`${search_fields.key}`] : `${search_fields.key}`;
          let search_query = `${field_key}:${search_fields.value}`
          searchFields.push(search_query)
        });
        query_string += `$search="${searchFields.join(" AND ")}"`;
      }
    }

    return query_string;
  }
}
module.exports = QueryHelper;
